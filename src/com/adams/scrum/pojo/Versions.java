/*
 * This java source file is generated by DAO4J v1.16
 * Generated on Wed May 05 11:29:43 GMT+05:30 2010
 * For more information, please contact b-i-d@163.com
 * Please check http://members.lycos.co.uk/dao4j/ for the latest version.
 */

package com.adams.scrum.pojo;

/*
 * For Table versions
 */
public class Versions implements java.io.Serializable, Cloneable {

    /* version_ID, PK */
    protected int versionId;

    /* version_lbl */
    protected String versionLbl;

    /* version_status_FK */
    protected int versionStatusFk;

    /* product_FK */
    protected int productFk;
 

    /* version_ID, PK */
    public int getVersionId() {
        return versionId;
    }

    /* version_ID, PK */
    public void setVersionId(int versionId) {
        this.versionId = versionId;
    }

    /* version_lbl */
    public String getVersionLbl() {
        return versionLbl;
    }

    /* version_lbl */
    public void setVersionLbl(String versionLbl) {
        this.versionLbl = versionLbl;
    }

    /* version_status_FK */
    public int getVersionStatusFk() {
        return versionStatusFk;
    }

    /* version_status_FK */
    public void setVersionStatusFk(int versionStatusFk) {
        this.versionStatusFk = versionStatusFk;
    }

    /* product_FK */
    public int getProductFk() {
        return productFk;
    }

    /* product_FK */
    public void setProductFk(int productFk) {
        this.productFk = productFk;
    }

    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj) {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof Versions))
            return false;

        Versions bean = (Versions) obj;

        if (this.versionId != bean.versionId)
            return false;

        if (this.versionLbl == null) {
            if (bean.versionLbl != null)
                return false;
        }
        else if (!this.versionLbl.equals(bean.versionLbl)) 
            return false;

        if (this.versionStatusFk != bean.versionStatusFk)
            return false;

        if (this.productFk != bean.productFk)
            return false;

        return true;
    }

    /* Creates and returns a copy of this object. */
    public Object clone()
    {
        Versions bean = new Versions();
        bean.versionId = this.versionId;
        bean.versionLbl = this.versionLbl;
        bean.versionStatusFk = this.versionStatusFk;
        bean.productFk = this.productFk;
        return bean;
    }

    /* Returns a string representation of the object. */
    public String toString() {
        String sep = "\r\n";
        StringBuffer sb = new StringBuffer();
        sb.append(this.getClass().getName()).append(sep);
        sb.append("[").append("versionId").append(" = ").append(versionId).append("]").append(sep);
        sb.append("[").append("versionLbl").append(" = ").append(versionLbl).append("]").append(sep);
        sb.append("[").append("versionStatusFk").append(" = ").append(versionStatusFk).append("]").append(sep);
        sb.append("[").append("productFk").append(" = ").append(productFk).append("]").append(sep);
        return sb.toString();
    }
}